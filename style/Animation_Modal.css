@import url('https://fonts.googleapis.com/css?family=Noto+Sans+KR:300,400,500,700,900&display=swap');

* {
  font-family: 'Noto Sans KR', sans-serif;
  box-sizing: border-box;
}

body{
  font-weight:300;
  color: #222;
  font-size: 15px;
  line-height: 1.6em;
}
.model{
  position: fixed;
  top: 50%;
  left: 50%;
  /* 모달 창이 위에서 아래로 떨어지는 등의 효과를 주고싶으면 transform: translate(-50%,-80%);를 수정해서 위치를 살짝 변경해준다.*/
  transform: translate(-50%,-80%) scale(0.7);

  /* position 이 중복 될 경우에는 늦게 나온것이 우선시 된다. */
  z-index: 10;
  opacity: 0;
  transition: .5s;
}
.model.active{
  opacity: 1;
  transform: translate(-50%,-50%) scale(1);
}
.model-content{
  /* border: 1px solid #000; */
  width: 600px;
  background-color: #fff;
  border-radius: 5px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.15);
  display: flex;
  overflow: hidden;
}
.model-content > div{
  padding: 20px;
}
.photo{
  /*  flex: 1; -> flex-grow: 1, flex-shrink:0, flex-basis:auto */
  flex: 1;
  background: url(../images/office.jpg) no-repeat center right;
  background-size: cover;
}
.desc{
  flex: 2;
  text-align: center;
}
.overlay{
  background-color: rgba(0, 0, 0, 0.3);
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  opacity: 0;
  transition: 0.5s;
  /* overlay가 전체를 덮고 있기 때문에, pointer-events: none; 를 줘서 존재하지만 이벤트 클릭을 받지 않겠다. */
  pointer-events: none;
}
.overlay.active{
  opacity: 1;
  pointer-events: all;
}
.btn-close{
  /* model 에 준 position:flex 로 인해 model 을 벗어나지 않는다. 부모로 인식해서 */
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: transparent;
  border: none;
  font-size: 18px;
  color: #999;
  cursor: pointer;
}

.btn-close:hover{
  color: #000;
}

/* input ,button 은 기본적으로 inline-block 속성을 가지고 있다. 그래서 같은 줄에 나란히 오게 된다. block으로 바꿈 근데, block 으로 바꾸면 width가 100%가 되어야하는데 input,button은 예외로 width 가 100% 되지 않는다. 그래서 width:100% 를 한번더 선언해줬다.  */
.desc-content input[type=email]{
  display: block;
  width: 100%;
  text-align: center;
  padding: 7px;
  margin-bottom: 10px;
  border: 1px solid #ccc;
  outline: none;
}

.desc-content input[type=email]::placeholder{
  color: #bbb;
  transition: 0.5s;
}

.desc-content input[type=email]:focus::placeholder{
  /* display: none; 를 사용하지 못하는 이유는 이는 요소 자체를 완전히 제거하는 것인데,placeholdersms 가상 요소이기떄문이다.  */
  visibility: hidden;
  opacity: 0;
}

.desc-content button {
  display: block;
  width: 100%;
  border: none;
  background-color: crimson;
  color: #fff;
  cursor: pointer;
  padding: 7px;
  outline: none;
}

@media (max-width: 768px){
  .model-content{
    flex-direction: column;
    width: 100%;
  }
  .model-content > div{
    width: 350px;
  }
  .photo{
    /* flex-basis 란 레이아웃에서 아이템이 차지할 기본 크기 */
    flex-basis: 250px;
  }
}
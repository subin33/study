
body{
  color: #222;
  line-height: 1.5em;
  font-weight: 300;
  margin: 0;
}
a{
  color: #222;
  text-decoration: none;
}

/* .container {
  text-align: center;
}

.icon {
  border: 1px solid red;
  display: inline-block;
} 
  다음과 같이 가운대 정렬을 시켜도 되고,  */
  .container {
    display: flex;
    justify-content: center;
    align-items: center;
    /* align-items: center; 만 하면 세로 가운대로 안온다 height 값이 있어야한다. */
    height: 100vh;
  }
  /* 다음과 같이 flex 를 사용해서 정렬을 시켜도 된다. */
  .icon {
    width: 125px;
    height: 125px;
    margin: 10px;
    position: relative;
  }

.icon span {
  position: absolute;  
  background-color: #000;
  color: #fff;
  width: 300px;
  text-align: center;
  padding: 10px;
  border-radius: 5px;
  top: -80px;
  pointer-events:none;
  /* left: 50% 과 transform: translateX(-50%); 을 사용함으로써, 부모요소의 값이 변경되더라고, 거기에 맞춰서 이동한다.  */
  left: 50%;
  transform: translateX(-50%);
  /* display: none; 를 사용하면 transition을 사용할수없으니 opacity 를 준다 서서히 나타나고 서서히 사라지는 작업을 위해  */
  opacity: 0;
  transition: 0.7s;
  /* visibility: hidden; */
  /* 하지만 opacity 를 주면 0.3 정도로 해보면 보이지만 않을뿐 해당 영역이 존재하기 때문에, 사용자가 아이콘 이 아닌 부분에 마우스를 올려도 해당 span 이 나타난다. opacity 를 줬기 때문에 display: none 을 사용할 수 없기 때문에, visibility:hidden; 을 사용해서 없어지게 한다. 여기에 visibility: hidden 를 해줬으니 hover 할때는 보이게 visible 을 해준다  */
  
  /* 이때, visibility: hidden과 visible 대신에 .icons span에 pointer-events:none;을 사용해도 된다. */
}

.icon span:after {
  content: '';
  position: absolute;
  background-color: #000;
  width: 10px;
  height: 10px;
  /* transform 이라는 속성은 두번 사용할 수는 없다  */
  transform: rotate(45deg) translateX(-50%);
  bottom: -5px;
  left: 50%;
  /* transform: translateX(-50%); */
}

.icon:hover span {
  /* display: block; */
  opacity: 1;
  /* visibility: visible; */
}